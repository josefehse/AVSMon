{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "2169794336494247941"
    }
  },
  "parameters": {
    "storageAccountName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "functionname": {
      "type": "string",
      "defaultValue": "avsmonbami1t"
    },
    "keyvaultName": {
      "type": "string"
    },
    "subnetId": {
      "type": "string"
    },
    "collectTelemetry": {
      "type": "bool",
      "defaultValue": false
    },
    "createNewLogAnalyticsWS": {
      "type": "bool",
      "defaultValue": true
    },
    "createNewStorageAccount": {
      "type": "bool"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": ""
    },
    "logAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": ""
    },
    "Tags": {
      "type": "object",
      "defaultValue": {
        "environment": "dev",
        "project": "avsmon"
      }
    },
    "avsNSXTAdmin": {
      "type": "string"
    },
    "avsNSXTAdminPassword": {
      "type": "securestring"
    },
    "avsvCenterAdmin": {
      "type": "string"
    },
    "avsvCenterAdminPassword": {
      "type": "securestring"
    },
    "vCenterFQDN": {
      "type": "string"
    },
    "sasExpiry": {
      "type": "string",
      "defaultValue": "[dateTimeAdd(utcNow(), 'PT2H')]"
    }
  },
  "variables": {
    "$fxv#0": "{\r\n  \"customerUsageAttribution\": {\r\n    \"SolutionIdentifier\": \"pid-36cc11e1-9ee5-4aaf-928a-832a734af7ca\"\r\n  }\r\n}",
    "$fxv#1": "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",
    "tempfilename": "functions.zip.tmp",
    "filename": "functions.zip",
    "functionsContainerName": "functions",
    "telemetryInfo": "[json(variables('$fxv#0'))]",
    "userIdentityName": "[format('{0}-identity', parameters('functionname'))]",
    "sasConfig": {
      "signedResourceTypes": "sco",
      "signedPermission": "r",
      "signedServices": "b",
      "signedExpiry": "[parameters('sasExpiry')]",
      "signedProtocol": "https",
      "keyToSign": "key2"
    },
    "functionUserAssignedIdentityRoles": [
      "4633458b-17de-408a-b874-0445c86b69e6",
      "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
      "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
      "92aaf0da-9dab-42b6-94a3-d43ce8d16293"
    ],
    "functionSystemAssignedIdentityRoles": [
      "b7e6dc6d-f1e8-4753-8033-0f276bb0955b"
    ]
  },
  "resources": [
    {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', variables('functionsContainerName'))]",
      "properties": {
        "immutableStorageWithVersioning": {
          "enabled": false
        },
        "denyEncryptionScopeOverride": false,
        "defaultEncryptionScope": "$account-encryption-key",
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('storageAccountName'))]",
      "properties": {
        "shareQuota": 1024,
        "accessTier": "TransactionOptimized",
        "enabledProtocols": "SMB"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccountName'), 'default')]"
      ]
    },
    {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('userIdentityName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('Tags')]"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2024-04-01-preview",
      "name": "[parameters('keyvaultName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enableRbacAuthorization": true,
        "provisioningState": "Succeeded",
        "publicNetworkAccess": "Enabled",
        "enablePurgeProtection": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('keyvaultName'), 'avsNSXTAdmin')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "string",
        "value": "[parameters('avsNSXTAdmin')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('keyvaultName'), 'avsNSXTAdminPassword')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "string",
        "value": "[parameters('avsNSXTAdminPassword')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('keyvaultName'), 'avsvCenterAdmin')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "string",
        "value": "[parameters('avsvCenterAdmin')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('keyvaultName'), 'avsvCenterAdminPassword')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "string",
        "value": "[parameters('avsvCenterAdminPassword')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('keyvaultName'), 'vCenterFQDN')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "string",
        "value": "[parameters('vCenterFQDN')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
      ]
    },
    {
      "condition": "[parameters('createNewStorageAccount')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('Tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', parameters('keyvaultName'), 'azurefilesconnectionstring')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "attributes": {
          "enabled": true
        },
        "contentType": "string",
        "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix={2}', if(parameters('createNewStorageAccount'), parameters('storageAccountName'), parameters('storageAccountName')), listKeys(if(parameters('createNewStorageAccount'), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))), if(parameters('createNewStorageAccount'), '2023-01-01', '2023-01-01')).keys[0].value, environment().suffixes.storage)]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', parameters('keyvaultName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}-farm', parameters('functionname'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('Tags')]",
      "sku": {
        "name": "EP1",
        "tier": "ElasticPremium",
        "size": "EP1",
        "family": "EP",
        "capacity": 1
      },
      "properties": {
        "elasticScaleEnabled": true
      },
      "kind": "elastic"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[parameters('functionname')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "tags": "[parameters('Tags')]",
      "identity": {
        "type": "SystemAssigned, UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName')))]": {}
        }
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[format('{0}.azurewebsites.net', parameters('functionname'))]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "ipSecurityRestrictions": [
            {
              "ipAddress": "Any",
              "action": "Allow",
              "priority": 1,
              "name": "Allow all",
              "description": "Allow all access"
            }
          ],
          "scmIpSecurityRestrictions": [
            {
              "ipAddress": "Any",
              "action": "Allow",
              "priority": 1,
              "name": "Allow all",
              "description": "Allow all access"
            }
          ],
          "http20Enabled": false,
          "functionAppScaleLimit": 200,
          "minimumElasticInstanceCount": 1,
          "minTlsVersion": "1.2",
          "cors": {
            "allowedOrigins": [
              "https://portal.azure.com"
            ],
            "supportCredentials": true
          }
        },
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName'))]",
        "vnetRouteAllEnabled": true,
        "virtualNetworkSubnetId": "[parameters('subnetId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-farm', parameters('functionname')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}/{1}', parameters('functionname'), 'appsettings')]",
      "properties": {
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('@Microsoft.KeyVault(VaultName={0};SecretName=azurefilesconnectionstring)', parameters('keyvaultName'))]",
        "AzureWebJobsStorage__accountName": "[if(parameters('createNewStorageAccount'), parameters('storageAccountName'), parameters('storageAccountName'))]",
        "WEBSITE_CONTENTSHARE": "[if(parameters('createNewStorageAccount'), parameters('storageAccountName'), parameters('storageAccountName'))]",
        "MSI_CLIENT_ID": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName')), '2023-01-31').clientId]",
        "FUNCTIONS_WORKER_RUNTIME": "powershell",
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "ResourceGroup": "[resourceGroup().name]",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', parameters('functionname')), '2020-02-02-preview').InstrumentationKey)]",
        "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
        "WEBSITE_SKIP_CONTENTSHARE_VALIDATION": "1"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('functionname'))]",
        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('functionname')]",
      "tags": "[parameters('Tags')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled",
        "WorkspaceResourceId": "[if(parameters('createNewLogAnalyticsWS'), resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), parameters('logAnalyticsWorkspaceResourceId'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "[format('deployscript-Function-{0}', parameters('functionname'))]",
      "tags": "[parameters('Tags')]",
      "location": "[parameters('location')]",
      "kind": "AzureCLI",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName')))]": {}
        }
      },
      "properties": {
        "azCliVersion": "2.42.0",
        "timeout": "PT5M",
        "retentionInterval": "PT1H",
        "environmentVariables": [
          {
            "name": "AZURE_STORAGE_ACCOUNT",
            "value": "[if(parameters('createNewStorageAccount'), parameters('storageAccountName'), parameters('storageAccountName'))]"
          },
          {
            "name": "CONTENT",
            "value": "[variables('$fxv#1')]"
          }
        ],
        "scriptContent": "[format('echo \"$CONTENT\" > {0} && cat {1} | base64 -d > {2} && az storage blob upload -f {3} -c {4} -n {5} --auth-mode login --overwrite true', variables('tempfilename'), variables('tempfilename'), variables('filename'), variables('filename'), variables('functionsContainerName'), variables('filename'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/config', parameters('functionname'), 'appsettings')]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/extensions",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/{1}', parameters('functionname'), 'MSDeploy')]",
      "properties": {
        "packageUri": "[format('{0}{1}/{2}?{3}', if(parameters('createNewStorageAccount'), reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob, reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01').primaryEndpoints.blob), variables('functionsContainerName'), variables('filename'), if(parameters('createNewStorageAccount'), listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken, listAccountSAS(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2023-01-01', variables('sasConfig')).accountSasToken))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]",
        "[resourceId('Microsoft.Resources/deploymentScripts', format('deployscript-Function-{0}', parameters('functionname')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "condition": "[parameters('createNewLogAnalyticsWS')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('Tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "copy": {
        "name": "userIdentityRoleAssignmentRG",
        "count": "[length(variables('functionUserAssignedIdentityRoles'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-{1}-RG', variables('userIdentityName'), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourcename": {
            "value": "[variables('userIdentityName')]"
          },
          "principalId": {
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName')), '2023-01-31').principalId]"
          },
          "roleDefinitionId": {
            "value": "[variables('functionUserAssignedIdentityRoles')[copyIndex()]]"
          },
          "roleShortName": {
            "value": "[variables('functionUserAssignedIdentityRoles')[copyIndex()]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "4355462422155428190"
            }
          },
          "parameters": {
            "resourcename": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            },
            "roleDefinitionId": {
              "type": "string"
            },
            "roleShortName": {
              "type": "string"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            }
          },
          "variables": {
            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "description": "[format('{0}-{1}-{2}', parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('roleIdtoUse')]"
              }
            }
          ],
          "outputs": {
            "roleassignmentname": {
              "type": "string",
              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('userIdentityName'))]"
      ]
    },
    {
      "copy": {
        "name": "SystemIdentityRoleAssignment",
        "count": "[length(variables('functionSystemAssignedIdentityRoles'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('SystemAssignedIdentityRole-{0}', copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourcename": {
            "value": "[parameters('functionname')]"
          },
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionname')), '2023-12-01', 'full').identity.principalId]"
          },
          "roleDefinitionId": {
            "value": "[variables('functionSystemAssignedIdentityRoles')[copyIndex()]]"
          },
          "roleShortName": {
            "value": "[variables('functionSystemAssignedIdentityRoles')[copyIndex()]]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "4355462422155428190"
            }
          },
          "parameters": {
            "resourcename": {
              "type": "string"
            },
            "principalId": {
              "type": "string"
            },
            "roleDefinitionId": {
              "type": "string"
            },
            "roleShortName": {
              "type": "string"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            }
          },
          "variables": {
            "roleIdtoUse": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('roleDefinitionId'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]",
              "properties": {
                "description": "[format('{0}-{1}-{2}', parameters('roleShortName'), parameters('resourcename'), parameters('utcValue'))]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[variables('roleIdtoUse')]"
              }
            }
          ],
          "outputs": {
            "roleassignmentname": {
              "type": "string",
              "value": "[guid(subscription().id, parameters('principalId'), parameters('roleDefinitionId'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionname'))]"
      ]
    },
    {
      "condition": "[parameters('collectTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('telemetryInfo').customerUsageAttribution.SolutionIdentifier]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.30.23.60470",
              "templateHash": "3966141451576704697"
            }
          },
          "resources": []
        }
      }
    }
  ]
}